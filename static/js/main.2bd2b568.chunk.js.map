{"version":3,"sources":["utils/actions/index.js","components/FormComponents/Colorpicker/CustomPicker.js","components/FormComponents/Colorpicker/ColorPicker.js","components/FormComponents/FileUploader/FileUploader.js","components/WarningModal/WarningModal.js","components/FormComponents/TextField/TextField.js","components/FormComponents/ButtonCopyField/ButtonCopyField.js","components/FormComponents/Dropdown/Dropdown.js","components/FormComponents/DropdownContainer/DropdownContainer.js","components/FormComponents/Exporter/Exporter.js","utils/EmailHTML/index.js","components/FormComponents/Builder/Builder.js","components/ImageLoadingSpinner/ImageLoadingSpinner.js","components/EmailPreviewComponents/EmailHeader/EmailHeader.js","components/EmailPreviewComponents/EmailImage/EmailImage.js","components/EmailPreviewComponents/EmailImageTagline/EmailImageTagline.js","components/EmailPreviewComponents/EmailContent/EmailContent.js","components/EmailPreviewComponents/EmailFooter/EmailFooter.js","components/EmailPreviewComponents/EmailCTA/EmailCTA.js","components/EmailPreviewComponents/Preview/Preview.js","components/EmailPreviewComponents/PreviewContainer/PreviewContainer.js","utils/Templates/DefaultTemplate.js","components/ErrorPage/ErrorPage.js","utils/createChart.js","utils/requestTones.js","components/LoadingSpinner/LoadingSpinner.js","components/Analyzer/Analyzer.js","components/App/App.js","serviceWorker.js","utils/Templates/DefaultState.js","utils/Templates/DefaultVisibilityState.js","utils/reducers/index.js","utils/reducers/formReducer.js","utils/reducers/visibilityReducer.js","utils/reducers/loadingReducer.js","utils/reducers/errorReducer.js","utils/reducers/warningReducer.js","index.js"],"names":["update","content","type","payload","toggleVisibility","bool","isLoading","hasWarning","warning","Sketch","width","rgb","hex","hsv","hsl","onChange","onSwatchHover","disableAlpha","presetColors","renderers","styles","passedStyles","className","reactCSS","merge","picker","padding","boxSizing","background","borderRadius","saturation","paddingBottom","position","overflow","Saturation","radius","shadow","controls","display","sliders","flex","color","height","marginTop","marginLeft","activeColor","absolute","r","g","b","a","boxShadow","hue","Hue","alpha","Alpha","style","colors","onClick","defaultProps","ColorWrap","ColorPicker","handleClick","setState","displayColorPicker","state","handleChange","props","store","handleClose","this","cursor","flexBasis","justifyContent","marginBottom","CustomPicker","React","Component","connect","dispatch","FileUploader","getFile","event","file","target","files","formData","FormData","append","fetch","method","body","then","res","json","data","path","name","ErrorPage","closeModal","e","clearWarning","TextField","toggleModal","active","length","constraints","maxLength","theme","value","ownProps","form","ButtonCopyField","Dropdown","getFormComponent","item","component","toggleChecked","getFormItems","formItems","map","key","title","checkbox","defaultChecked","fontSize","dropdown","visibility","DropdownContainer","toggleDropdown","fontWeight","margin","Exporter","getItems","emailText","document","querySelector","outerHTML","email","navigator","clipboard","writeText","Builder","menuContainers","menus","menu","ImageLoadingSpinner","top","left","alignItems","backgroundColor","companyImage","companyName","companyFontColor","bgColor","headerBGColor","loading","logoActive","nameActive","link","border","cellSpacing","cellPadding","href","src","alt","paddingLeft","mainImage","mainImageTagline","mainImageButtonCopy","mainImageButtonColor","mainImageButtonFontColor","mainImageTaglineBG","mainImageFontColor","bannerTextActive","buttonTextActive","buttonStyle","verticalAlign","float","tableLayout","paddingTop","parse","replace","domNode","createElement","domToReact","children","options","contentActive","Parser","address","footerAddress","footerBGColor","fontColor","footerFontColor","align","cta","buttonColor","ctaButtonColor","buttonFontColor","ctaButtonFontColor","buttonActive","Preview","EmailCTA","PreviewContainer","DefaultTemplate","Infinity","clearError","error","to","createChart","ref","Chart","labels","tone","tone_name","datasets","label","score","toFixed","borderColor","borderWidth","scales","yAxes","ticks","beginAtZero","requestTones","parseTones","tones","document_tone","toneInput","text","JSON","stringify","headers","ok","toneResponse","Error","status","statusText","LoadingSpinner","Analyzer","contentRef","createRef","ctaRef","taglineRef","contentTones","tagline","taglineTones","tagLineButton","taglineButtonTones","taglineAndButtonTones","concat","ctaTones","current","getContext","hasError","maxWidth","maxHeight","err","exact","Boolean","window","location","hostname","match","DefaultState","process","mainImageButtonLink","ctaButtonLink","headerLink","DefaultVisibilityState","rootReducer","combineReducers","action","message","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.2bd2b568.chunk.js","sourcesContent":["export const update = content => ({\n  type: \"UPDATE\",\n  payload: content,\n})\n\nexport const toggleVisibility = bool => ({\n  type: \"TOGGLE_VISIBILITY\",\n  payload: bool,\n})\n\nexport const isLoading = bool => ({\n  type: \"IS_LOADING\",\n  payload: bool,\n})\n\nexport const hasError = err => ({\n  type: \"ERROR\",\n  payload: err,\n})\n\nexport const clearError = () => ({\n  type: \"CLEAR_ERROR\",\n  payload: false,\n})\n\nexport const hasWarning = warning => ({\n  type: \"HAS_WARNING\",\n  payload: warning,\n})\n\nexport const clearWarning = () => ({\n  type: \"CLEAR_WARNING\",\n  payload: false,\n})\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport reactCSS from 'reactcss'\nimport merge from 'lodash/merge'\n\nimport { ColorWrap, Saturation, Hue, Alpha, Checkboard } from 'react-color/lib/components/common'\nimport SketchFields from 'react-color/lib/components/sketch/SketchFields.js'\nimport SketchPresetColors from 'react-color/lib/components/sketch/SketchPresetColors.js'\n\nexport const Sketch = ({ width, rgb, hex, hsv, hsl, onChange, onSwatchHover,\n  disableAlpha, presetColors, renderers, styles: passedStyles = {}, className = '' }) => {\n  const styles = reactCSS(merge({\n    'default': {\n      picker: {\n        width: \"100%\",\n        padding: '10px 10px 0',\n        boxSizing: 'initial',\n        background: '#fff',\n        borderRadius: '0.25rem',\n      },\n      saturation: {\n        width: '100%',\n        paddingBottom: '75%',\n        position: 'relative',\n        overflow: 'hidden',\n      },\n      Saturation: {\n        radius: '3px',\n        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)',\n      },\n      controls: {\n        display: 'flex',\n      },\n      sliders: {\n        padding: '4px 0',\n        flex: '1',\n      },\n      color: {\n        width: '24px',\n        height: '24px',\n        position: 'relative',\n        marginTop: '4px',\n        marginLeft: '4px',\n        borderRadius: '3px',\n      },\n      activeColor: {\n        absolute: '0px 0px 0px 0px',\n        borderRadius: '2px',\n        background: `rgba(${ rgb.r },${ rgb.g },${ rgb.b },${ rgb.a })`,\n        boxShadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)',\n      },\n      hue: {\n        position: 'relative',\n        height: '10px',\n        overflow: 'hidden',\n      },\n      Hue: {\n        radius: '2px',\n        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)',\n      },\n\n      alpha: {\n        position: 'relative',\n        height: '10px',\n        marginTop: '4px',\n        overflow: 'hidden',\n      },\n      Alpha: {\n        radius: '2px',\n        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)',\n      },\n      ...passedStyles,\n    },\n    'disableAlpha': {\n      color: {\n        height: '10px',\n      },\n      hue: {\n        height: '10px',\n      },\n      alpha: {\n        display: 'none',\n      },\n    },\n  }, passedStyles), { disableAlpha })\n\n  return (\n    <div style={ styles.picker } className={ `sketch-picker ${ className }` }>\n      <div style={ styles.saturation }>\n        <Saturation\n          style={ styles.Saturation }\n          hsl={ hsl }\n          hsv={ hsv }\n          onChange={ onChange }\n        />\n      </div>\n      <div style={ styles.controls } className=\"flexbox-fix\">\n        <div style={ styles.sliders }>\n          <div style={ styles.hue }>\n            <Hue\n              style={ styles.Hue }\n              hsl={ hsl }\n              onChange={ onChange }\n            />\n          </div>\n          <div style={ styles.alpha }>\n            <Alpha\n              style={ styles.Alpha }\n              rgb={ rgb }\n              hsl={ hsl }\n              renderers={ renderers }\n              onChange={ onChange }\n            />\n          </div>\n        </div>\n        <div style={ styles.color }>\n          <Checkboard />\n          <div style={ styles.activeColor } />\n        </div>\n      </div>\n\n      <SketchFields\n        rgb={ rgb }\n        hsl={ hsl }\n        hex={ hex }\n        onChange={ onChange }\n        disableAlpha={ disableAlpha }\n      />\n      <SketchPresetColors\n        colors={ presetColors }\n        onClick={ onChange }\n        onSwatchHover={ onSwatchHover }\n      />\n    </div>\n  )\n}\n\nSketch.propTypes = {\n  disableAlpha: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  styles: PropTypes.object,\n}\n\nSketch.defaultProps = {\n  disableAlpha: false,\n  width: 200,\n  styles: {},\n  presetColors: ['#D0021B', '#F5A623', '#F8E71C', '#8B572A', '#7ED321', '#417505',\n    '#BD10E0', '#9013FE', '#4A90E2', '#50E3C2', '#B8E986', '#000000',\n    '#4A4A4A', '#9B9B9B', '#FFFFFF'],\n}\n\nexport default ColorWrap(Sketch)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { update } from '../../../utils/actions';\nimport PropTypes from 'prop-types';\nimport CustomPicker from './CustomPicker';\n\nclass ColorPicker extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      displayColorPicker: false,\n      background: '#fff'\n    };\n  }\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  };\n\n  handleChange = (color) => {\n    this.setState({ background: color.hex });\n    this.props.update({[this.props.store]: color.hex});\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  };\n\n  render() {\n\n    return (\n      <>\n        <button onClick={ this.handleClick } style={{cursor: \"pointer\"}}>Pick Color</button>\n        { this.state.displayColorPicker ? <div style={{flexBasis: \"100%\", display: \"flex\", justifyContent: \"flex-end\", marginBottom: \"1rem\"}}>\n          <CustomPicker\n            onChange={ this.handleChange }\n            color={ this.state.background }\n          />\n        </div> : null }\n      </>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  update: content => dispatch(update(content))\n})\n\nColorPicker.propTypes = {\n  store: PropTypes.string,\n  update: PropTypes.func,\n}\n\nexport default connect(null, mapDispatchToProps)(ColorPicker);\n","import React from 'react';\nimport './FileUploader.css';\nimport { update, isLoading } from '../../../utils/actions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass FileUploader extends React.Component {\n\n  getFile = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      this.props.isLoading(this.props.store);\n      const formData = new FormData()\n      formData.append('myFile', file);\n\n        fetch(\"https://limitless-citadel-48645.herokuapp.com/saveImage\", {\n          method: \"POST\",\n          body: formData\n        })\n        .then(res => res.json())\n        .then(data =>\n          {\n            this.props.update({[this.props.store]: `https://limitless-citadel-48645.herokuapp.com${data.path}`});\n            this.props.isLoading(false);\n          }\n        )\n    }\n  }\n\n  render() {\n    return (\n    <div className=\"upload-btn-wrapper\">\n      <button className=\"upload-btn\">Upload file</button>\n      <input type=\"file\" name=\"myfile\" className=\"logo-file-uploader\" onChange={this.getFile}/>\n    </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  update: content => dispatch(update(content)),\n  isLoading: bool => dispatch(isLoading(bool)),\n})\n\nFileUploader.propTypes = {\n  store: PropTypes.string,\n  update: PropTypes.func,\n}\n\nexport default connect(null, mapDispatchToProps)(FileUploader);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { clearWarning } from '../../utils/actions';\nimport PropTypes from 'prop-types';\nimport './WarningModal.css';\n\nclass ErrorPage extends React.Component {\n\n  componentWillUnmount() {\n    this.props.clearWarning();\n  }\n\n  closeModal = (e) => {\n    this.props.clearWarning();\n  }\n\n  render() {\n      return (\n          <div className=\"warning-block\">\n            <p>{this.props.warning}</p>\n          </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  warning: state.warning.warning,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  clearWarning: () => dispatch(clearWarning()),\n})\n\nErrorPage.propTypes = {\n  error: PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.bool\n]),\n  clearWarning: PropTypes.func,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { update, hasWarning, clearWarning } from '../../../utils/actions';\nimport './TextField.css';\nimport PropTypes from 'prop-types';\nimport ReactQuill from 'react-quill';\nimport WarningModal from '../../WarningModal/WarningModal';\nimport 'react-quill/dist/quill.snow.css';\n\nclass TextField extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      active: false,\n    }\n  }\n\n  toggleModal = (e) => {\n    this.setState({active: !this.state.active})\n  }\n\n  update = (store, content) => {\n    if (content.length > this.props.constraints.maxLength) {\n      this.props.hasWarning({\n        store: this.props.store,\n        warning: \"Warning: Your content exceeds the maximum suggested length for this section.\"\n      });\n    } else {\n      this.props.clearWarning();\n    }\n\n    this.props.update({[store]: content});\n  }\n\n  render() {\n    return (\n        <>\n          <button className=\"text-field-btn\" onClick={() => this.toggleModal()} >\n            Edit\n          </button>\n          <div className={this.state.active ? \"modal-wrapper\" : \"hidden\"}>\n            <div className=\"modal\" style={{position: \"relative\"}}>\n              <ReactQuill theme=\"snow\" value={this.props.content} onChange={(value) => this.update(this.props.store, value)}/>\n              {this.props.warning === this.props.store && <WarningModal />}\n            </div>\n          </div>\n        </>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  content: state.form[ownProps.store],\n  warning: state.warning.store,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  update: content => dispatch(update(content)),\n  hasWarning: warning => dispatch(hasWarning(warning)),\n  clearWarning: () => dispatch(clearWarning()),\n})\n\nTextField.propTypes = {\n  store: PropTypes.string,\n  update: PropTypes.func,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextField);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { update, hasWarning, clearWarning } from '../../../utils/actions';\nimport './ButtonCopyField.css';\nimport PropTypes from 'prop-types';\nimport WarningModal from '../../WarningModal/WarningModal';\n\nclass ButtonCopyField extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      active: false,\n    }\n  }\n\n  toggleModal = (e) => {\n    this.setState({active: !this.state.active})\n  }\n\n  update = (store, content) => {\n    if (content.length > this.props.constraints.maxLength) {\n      this.props.hasWarning({\n        store: this.props.store, warning: \"Warning: Your content exceeds the maximum suggested length for this section.\"\n      });\n    } else {\n      this.props.clearWarning();\n    }\n\n    this.props.update({[store]: content});\n  }\n\n  render() {\n    return (\n        <>\n          <button className=\"text-field-btn\" onClick={() => this.toggleModal()}>\n            Edit\n          </button>\n          <div className={this.state.active ? \"modal-wrapper\" : \"hidden\"}>\n            <div className=\"modal\">\n              <input type=\"text\"\n                style={{padding: \"0.25rem 0 0.25rem 0.25rem\", width: \"calc(100% - 0.25rem)\"}}\n                value={this.props.content}\n                onChange={(e) => this.update(this.props.store, e.target.value)}\n              />\n              {this.props.warning === this.props.store && <WarningModal />}\n            </div>\n          </div>\n        </>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  content: state.form[ownProps.store],\n  warning: state.warning.store,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  update: content => dispatch(update(content)),\n  hasWarning: warning => dispatch(hasWarning(warning)),\n  clearWarning: () => dispatch(clearWarning()),\n})\n\nButtonCopyField.propTypes = {\n  store: PropTypes.string,\n  update: PropTypes.func,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonCopyField);\n","import React from 'react';\nimport './Dropdown.css';\nimport Colorpicker from '../Colorpicker/ColorPicker';\nimport FileUploader from '../FileUploader/FileUploader';\nimport TextField from '../TextField/TextField';\nimport ButtonCopyField from '../ButtonCopyField/ButtonCopyField';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toggleVisibility } from '../../../utils/actions';\n\nclass Dropdown extends React.Component {\n\n  getFormComponent = (item) => {\n    switch (item.component) {\n      case \"ButtonCopyField\":\n        return <ButtonCopyField store={item.store} constraints={item.constraints} />\n      case \"Colorpicker\":\n        return <Colorpicker store={item.store} constraints={item.constraints} />\n      case \"TextField\":\n        return <TextField store={item.store} constraints={item.constraints} />\n      case \"FileUploader\":\n        return <FileUploader store={item.store} constraints={item.constraints} />\n      default:\n        return null;\n    }\n  }\n\n  toggleChecked = (item) => {\n    this.props.toggleVisibility({[item]: !this.props.active[item]})\n  }\n\n  getFormItems = () => {\n    return this.props.formItems.map(item =>\n      ( <div className=\"form-item\" key={item.title}>\n          <div className=\"form-title-wrapper\">\n            {item.checkbox && <input type=\"checkbox\" onClick={() => this.toggleChecked(item.title)} defaultChecked={this.props.active} style={{cursor: \"pointer\"}}/>}\n            {item.checkbox && <p style={{fontSize: \"0.85rem\", marginLeft: \"0.25rem\"}}>{item.title}</p>}\n            {!item.checkbox && <p style={{fontSize: \"0.85rem\", marginLeft: \"1.4rem\"}}>{item.title}</p>}\n          </div>\n          {this.getFormComponent(item)}\n        </div>\n      )\n    );\n  }\n\n  render() {\n    return (\n      <div className={this.props.dropdown ? \"dropdown\" : \"hidden dropdown\"}>\n        {this.getFormItems()}\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleVisibility: (title, bool) => dispatch(toggleVisibility(title, bool))\n})\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: state.visibility,\n})\n\nDropdown.propTypes = {\n  dropdown: PropTypes.bool,\n  formItems: PropTypes.array,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dropdown);\n","import React from 'react';\nimport './DropdownContainer.css';\nimport Dropdown from '../Dropdown/Dropdown';\nimport { connect } from 'react-redux';\nimport { toggleVisibility } from '../../../utils/actions';\nimport PropTypes from 'prop-types';\n\nclass DropdownContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      dropdown: false,\n    }\n  }\n\n  toggleChecked = (e) => {\n    this.props.toggleVisibility({[this.props.title]: !this.props.active})\n  }\n\n  toggleDropdown = (e) => {\n    this.setState({dropdown: !this.state.dropdown});\n  }\n\n  render() {\n    return (\n      <div className=\"dropdown-wrapper\">\n        <div className=\"dropdown-container\">\n          <div className=\"title-wrapper\">\n            <input type=\"checkbox\" className=\"visibility-toggle\" onClick={() => this.toggleChecked()} defaultChecked={this.props.active} />\n            <h4 style={{fontWeight: \"500\", fontSize: \"1.1rem\", padding: \"0\", margin: \"0\"}}>{this.props.title}</h4>\n          </div>\n          <p className=\"dropdown-toggle\" onClick={() => this.toggleDropdown()}>+</p>\n        </div>\n        <Dropdown\n          dropdown={this.state.dropdown}\n          formItems={this.props.formItems}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleVisibility: (title, bool) => dispatch(toggleVisibility(title, bool))\n})\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: state.visibility[ownProps.title]\n})\n\nDropdownContainer.propTypes = {\n  formItems: PropTypes.array,\n  title: PropTypes.string,\n  active: PropTypes.bool,\n  toggleVisibility: PropTypes.func,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownContainer);\n","import React from 'react';\nimport { head, bodyTop, bottom } from '../../../utils/EmailHTML';\n\nconst Exporter = () => {\n\n  const getItems = async () => {\n    const emailText = document.querySelector('.preview').outerHTML;\n    const email = `${head}${bodyTop}${emailText}${bottom}`;\n\n    await navigator.clipboard.writeText(email);\n  }\n\n  return <button onClick={() => getItems()}>Export</button>\n}\n\nexport default Exporter;\n","export const head = `<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n<meta name=\"format-detection\" content=\"telephone=no\">\n<meta name=\"viewport\" content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=no;\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=9; IE=8; IE=7; IE=EDGE\" />\n\n    <title>Page title</title>\n\n    <style>\n       @import url(http://fonts.googleapis.com/css?family=Roboto:300); /*Calling our web font*/\n\n      /* Some resets and issue fixes */\n      #outlook a { padding:0; }\n      body{ width:100% !important; -webkit-text; size-adjust:100%; -ms-text-size-adjust:100%; margin:0; padding:0;}\n      .ReadMsgBody { width: 100%; }\n      .ExternalClass {width:100%;}\n      .backgroundTable {margin:0 auto; padding:0; width:100%;!important;}\n      table td {border-collapse: collapse;}\n      .ExternalClass * {line-height: 115%;}\n      /* End reset */\n\n\n      /* These are our tablet/medium screen media queries */\n      @media screen and (max-width: 630px){\n\n\n          /* Display block allows us to stack elements */\n          *[class=\"mobile-column\"] {display: block;}\n\n          /* Some more stacking elements */\n          *[class=\"mob-column\"] {float: none !important;width: 100% !important;}\n\n          /* Hide stuff */\n          *[class=\"hide\"] {display:none !important;}\n\n          /* This sets elements to 100% width and fixes the height issues too, a god send */\n          *[class=\"100p\"] {width:100% !important; height:auto !important;}\n\n          /* For the 2x2 stack */\n          *[class=\"condensed\"] {padding-bottom:40px !important; display: block;}\n\n          /* Centers content on mobile */\n          *[class=\"center\"] {text-align:center !important; width:100% !important; height:auto !important;}\n\n          /* 100percent width section with 20px padding */\n          *[class=\"100pad\"] {width:100% !important; padding:20px;}\n\n          /* 100percent width section with 20px padding left & right */\n          *[class=\"100padleftright\"] {width:100% !important; padding:0 20px 0 20px;}\n\n          /* 100percent width section with 20px padding top & bottom */\n          *[class=\"100padtopbottom\"] {width:100% !important; padding:20px 0px 20px 0px;}\n\n\n      }\n        </style>\n\n\n</head>`;\n\nexport const bodyTop = `<body style=\"padding:0; margin:0\"><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"margin: 0; padding: 0\" width=\"100%\">\n    <tr>\n        <td align=\"center\" valign=\"top\" style=\"background-color: #e4e4e4\">`;\n\nexport const bottom = `</td>\n    </tr>\n</table></body>\n</html>`;\n","import React from 'react';\nimport './Builder.css';\nimport DropdownContainer from '../DropdownContainer/DropdownContainer';\nimport Exporter from '../Exporter/Exporter';\nimport PropTypes from 'prop-types';\n\nexport const Builder = ({ menus }) => {\n\n  const menuContainers = menus.map(menu => (\n    <DropdownContainer\n      key={menu.title}\n      formItems={menu.formItems}\n      title={menu.title}\n    />\n  ));\n\n  return (\n  <section className=\"builder\">\n    <div className=\"menu-containers-wrapper\">\n      {menuContainers}\n    </div>\n    <div className=\"buttons-wrapper\">\n      <Exporter />\n    </div>\n  </section>\n  )\n}\n\nBuilder.propTypes = {\n  menus: PropTypes.array,\n}\n","import React from 'react';\n\nconst ImageLoadingSpinner = () => {\n  return <div style={{position: \"absolute\", top: \"0\", left: \"0\", width: \"100%\", height: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", backgroundColor: \"rgba(0,0,0,0.15)\"}}><i className=\"fas fa-spinner fa-pulse\" title=\"spinner\"></i></div>\n}\n\nexport default ImageLoadingSpinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ImageLoadingSpinner from '../../ImageLoadingSpinner/ImageLoadingSpinner';\n\nconst EmailHeader = ({\n  bgColor,\n  companyImage,\n  companyName,\n  companyFontColor,\n  active,\n  loading,\n  logoActive,\n  nameActive,\n  link,\n  }) => {\n  return active ? (\n    <table border=\"0\" cellSpacing=\"0\" cellPadding=\"0\" width=\"600px\" height=\"105px\" style={{color: companyFontColor, backgroundColor: bgColor}}>\n      <tbody>\n        <tr>\n          {logoActive && <td width=\"75px\">\n            <div className=\"company-logo-container\" style={{position: \"relative\", width: \"min-content\"}}>\n              {loading === 'companyImage' && <ImageLoadingSpinner />}\n              <a href={link}><img src={companyImage} alt=\"Company logo\" border=\"0\" style={{display: \"block\", width: \"75px\", marginLeft: \"1rem\"}} /></a>\n            </div>\n          </td>}\n          { nameActive && <td style={{fontSize: \"25px\", paddingLeft: \"1rem\"}}>{companyName}</td>}\n        </tr>\n      </tbody>\n    </table>\n\n  ) : null\n}\n\nconst mapStateToProps = state => ({\n  companyImage: state.form.companyImage,\n  companyName: state.form.companyName,\n  companyFontColor: state.form.companyFontColor,\n  bgColor: state.form.headerBGColor,\n  active: state.visibility[\"Header\"],\n  loading: state.loading,\n  logoActive: state.visibility[\"Company Logo\"],\n  nameActive: state.visibility[\"Company Name\"],\n  link: state.form[\"headerLink\"]\n})\n\nEmailHeader.propTypes = {\n  bgColor: PropTypes.string,\n  companyImage: PropTypes.string,\n  companyName: PropTypes.string,\n  companyFontColor: PropTypes.string,\n  active: PropTypes.bool,\n}\n\nexport default connect(mapStateToProps)(EmailHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageLoadingSpinner from '../../ImageLoadingSpinner/ImageLoadingSpinner';\nimport { connect } from 'react-redux';\n\nconst EmailImage = (\n  {\n    mainImage,\n    mainImageTagline,\n    mainImageButtonCopy,\n    mainImageButtonColor,\n    mainImageButtonFontColor,\n    active,\n    loading,\n  }) => {\n\n  return active ? (\n    <div className=\"placeholder-image-container\" style={{position: \"relative\"}}>\n      {loading === 'mainImage' && <ImageLoadingSpinner />}\n      <img src={mainImage} alt=\"Main content\" style={{width: \"600px\", display: \"block\"}} />\n    </div>\n  ) : null\n}\n\nconst mapStateToProps = state => ({\n  mainImage: state.form.mainImage,\n  mainImageTagline: state.form.mainImageTagline,\n  mainImageButtonCopy: state.form.mainImageButtonCopy,\n  mainImageButtonColor: state.form.mainImageButtonColor,\n  mainImageButtonFontColor: state.form.mainImageButtonFontColor,\n  active: state.visibility[\"Main Image\"],\n  loading: state.loading,\n});\n\nEmailImage.propTypes = {\n  mainImage: PropTypes.string,\n  mainImageTagline: PropTypes.string,\n  mainImageButtonCopy: PropTypes.string,\n  mainImageButtonColor: PropTypes.string,\n  mainImageButtonFontColor: PropTypes.string,\n  active: PropTypes.bool,\n}\n\nexport default connect(mapStateToProps)(EmailImage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport parse, { domToReact } from 'html-react-parser';\n\nconst EmailImageTagline = (\n  {\n    mainImageTaglineBG,\n    mainImageTagline,\n    mainImageButtonCopy,\n    mainImageButtonColor,\n    mainImageFontColor,\n    mainImageButtonFontColor,\n    active,\n    bannerTextActive,\n    buttonTextActive,\n    link,\n  }) => {\n\n  const buttonStyle = {\n    backgroundColor: mainImageButtonColor,\n    border: \"solid 0.5px rgba(0,0,0,0.25)\",\n    padding: \"0.5rem 1rem\",\n    borderRadius: \"0.25rem\",\n    cursor: \"pointer\",\n    height: \"min-content\",\n    fontWeight: \"600\",\n    color: mainImageButtonFontColor,\n    verticalAlign: \"middle\",\n    float: \"right\",\n    fontSize: \"20px\",\n  };\n\n  return active ? (\n    <table border=\"0\" cellSpacing=\"0\" cellPadding=\"0\" style={{display: \"block\", color: mainImageFontColor, backgroundColor: mainImageTaglineBG, tableLayout: \"fixed\", width: \"600px\", paddingTop: \"1rem\"}}>\n      <tbody>\n        <tr>\n          {bannerTextActive && <td width=\"400\">\n            {parse(mainImageTagline, {\n              replace: domNode => {\n                if (domNode.name) {\n                  return React.createElement(domNode.name, {style: {paddingLeft: \"1rem\", fontSize: \"26px\"}}, domToReact(domNode.children, domNode.options))\n                }\n              }\n            })}\n          </td>}\n          {buttonTextActive && <td style={{padding: \" 1rem\"}}><a href={link}><button style={buttonStyle}>{mainImageButtonCopy}</button></a></td>}\n        </tr>\n      </tbody>\n    </table>\n  ) : null\n}\n\nconst mapStateToProps = state => ({\n  mainImageTaglineBG: state.form.mainImageTaglineBG,\n  mainImageTagline: state.form.mainImageTagline,\n  mainImageButtonCopy: state.form.mainImageButtonCopy,\n  mainImageButtonColor: state.form.mainImageButtonColor,\n  mainImageFontColor: state.form.mainImageFontColor,\n  mainImageButtonFontColor: state.form.mainImageButtonFontColor,\n  active: state.visibility[\"Image Banner\"],\n  bannerTextActive: state.visibility[\"Banner Text\"],\n  buttonTextActive: state.visibility[\"Banner Button Text\"],\n  link: state.form[\"mainImageButtonLink\"]\n});\n\nEmailImageTagline.propTypes = {\n  mainImageTaglineBG: PropTypes.string,\n  mainImageTagline: PropTypes.string,\n  mainImageButtonCopy: PropTypes.string,\n  mainImageButtonColor: PropTypes.string,\n  mainImageFontColor: PropTypes.string,\n  mainImageButtonFontColor: PropTypes.string,\n  active: PropTypes.bool,\n}\n\nexport default connect(mapStateToProps)(EmailImageTagline);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Parser from 'html-react-parser';\n\nconst EmailContent = ({ content, active, contentActive }) => {\n\n  return active ? (\n    <table border=\"0\" cellSpacing=\"0\" cellPadding=\"0\" width=\"600px\" style={{backgroundColor: \"#ffffff\"}}>\n      <tbody>\n        <tr>\n            {contentActive && <td style={{padding: \"0.5rem 1rem\", fontSize: \"20px\"}}>{Parser(content)}</td>}\n        </tr>\n      </tbody>\n    </table>\n  ) : null\n}\n\nconst mapStateToProps = state => ({\n  content: state.form.content,\n  active: state.visibility[\"Main Content\"],\n  contentActive: state.visibility[\"Content Block Text\"],\n})\n\nEmailContent.propTypes = {\n  content: PropTypes.string,\n  active: PropTypes.bool,\n};\n\nexport default connect(mapStateToProps)(EmailContent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Parser from 'html-react-parser';\n\nconst EmailFooter = ({ address, fontColor, bgColor, active }) => {\n\n  return active ? (\n    <table border=\"0\" cellSpacing=\"0\" cellPadding=\"0\" width=\"600px\" style={{color: fontColor, backgroundColor: bgColor}}>\n      <tbody>\n        <tr>\n          <td style={{padding: \"0 16px\"}} align=\"center\">{Parser(address)}</td>\n        </tr>\n      </tbody>\n    </table>\n  ) : null\n}\n\nconst mapStateToProps = state => ({\n  address: state.form.footerAddress,\n  bgColor: state.form.footerBGColor,\n  fontColor: state.form.footerFontColor,\n  active: state.visibility[\"Footer\"],\n});\n\nEmailFooter.propTypes = {\n  address: PropTypes.string,\n  fontColor: PropTypes.string,\n  bgColor: PropTypes.string,\n  active: PropTypes.bool,\n}\n\nexport default connect(mapStateToProps)(EmailFooter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Parser from 'html-react-parser';\n\nconst EmailContent = ({ cta, buttonColor, buttonFontColor, active, buttonActive, link }) => {\n  const buttonStyle = {\n    margin: \"1rem 0\",\n    padding: \"0.75rem 1.25rem\",\n    border: \"solid 0.5px rgba(0,0,0,0.25)\",\n    borderRadius: \"0.25rem\",\n    color: buttonFontColor,\n    backgroundColor: buttonColor,\n    cursor: \"pointer\",\n    fontWeight: \"600\",\n    fontSize: \"20px\",\n  }\n\n  return active ? (\n    <table border=\"0\" cellSpacing=\"0\" cellPadding=\"0\" width=\"600px\" style={{backgroundColor: \"#ffffff\"}}>\n      <tbody>\n        <tr>\n          {buttonActive && <td style={{padding: \"1rem\"}} align=\"center\"><a href={link}><button style={buttonStyle}>{Parser(cta)}</button></a></td>}\n        </tr>\n      </tbody>\n    </table>\n  ) : null\n}\n\nconst mapStateToProps = state => ({\n  cta: state.form.cta,\n  buttonColor: state.form.ctaButtonColor,\n  buttonFontColor: state.form.ctaButtonFontColor,\n  active: state.visibility[\"Main Content\"],\n  buttonActive: state.visibility[\"CTA Button Text\"],\n  link: state.form[\"ctaButtonLink\"]\n})\n\nEmailContent.propTypes = {\n  cta: PropTypes.string,\n  buttonColor: PropTypes.string,\n  buttonFontColor: PropTypes.string,\n  active: PropTypes.bool,\n}\n\nexport default connect(mapStateToProps)(EmailContent);\n","import React from 'react';\nimport EmailHeader from '../EmailHeader/EmailHeader';\nimport EmailImage from '../EmailImage/EmailImage';\nimport EmailImageTagline from '../EmailImageTagline/EmailImageTagline';\nimport EmailContent from '../EmailContent/EmailContent';\nimport EmailFooter from '../EmailFooter/EmailFooter';\nimport EmailCTA from '../EmailCTA/EmailCTA';\nimport './Preview.css';\n\nconst Preview = () => {\n  return (\n    <div className=\"preview\" style={{margin: \"25px\"}}>\n      <EmailHeader />\n      <EmailImage />\n      <EmailImageTagline />\n      <EmailContent />\n      <EmailCTA />\n      <EmailFooter />\n    </div>\n  )\n}\n\nexport default Preview;\n","import React from 'react';\nimport './PreviewContainer.css';\nimport Preview from '../Preview/Preview';\n\nconst PreviewContainer = () => {\n  return <section className=\"preview-container\"><Preview /></section>\n}\n\nexport default PreviewContainer;\n","export const DefaultTemplate = [{\n  title: \"Header\",\n  formItems: [\n    {\n      title: \"Company Logo\",\n      component: \"FileUploader\",\n      store: \"companyImage\",\n      checkbox: true\n    },\n    {\n      title: \"Company Name\",\n      component: \"ButtonCopyField\",\n      constraints: {maxLength: 40},\n      store: \"companyName\",\n      checkbox: true\n    },\n    {\n      title: \"Header Link\",\n      component: \"ButtonCopyField\",\n      constraints: {maxLength: Infinity},\n      store: \"headerLink\",\n      checkbox: false\n    },\n    {\n      title: \"Font Color\",\n      component: \"Colorpicker\",\n      store: \"companyFontColor\",\n      checkbox: false\n    },\n    {\n      title: \"Background Color\",\n      component: \"Colorpicker\",\n      store: \"headerBGColor\",\n      checkbox: false\n    },\n  ],\n},\n{\n  title: \"Main Image\",\n  formItems: [\n    {\n      title: \"Image\",\n      component: \"FileUploader\",\n      store: \"mainImage\",\n      checkbox: false\n    },\n  ],\n},\n{\n  title: \"Image Banner\",\n  formItems: [\n    {\n      title: \"Banner Text\",\n      component: \"TextField\",\n      constraints: {maxLength: 65},\n      store: \"mainImageTagline\",\n      checkbox: true\n    },\n    {\n      title: \"Background Color\",\n      component: \"Colorpicker\",\n      store: \"mainImageTaglineBG\",\n      checkbox: false\n    },\n    {\n      title: \"Font Color\",\n      component: \"Colorpicker\",\n      store: \"mainImageFontColor\",\n      checkbox: false\n    },\n    {\n      title: null\n    },\n    {\n      title: \"Banner Button Text\",\n      component: \"ButtonCopyField\",\n      constraints: {maxLength: 25},\n      store: \"mainImageButtonCopy\",\n      checkbox: true\n    },\n    {\n      title: \"Banner Button Link\",\n      component: \"ButtonCopyField\",\n      constraints: {maxLength: Infinity},\n      store: \"mainImageButtonLink\",\n      checkbox: false\n    },\n    {\n      title: \"Button Color\",\n      component: \"Colorpicker\",\n      store: \"mainImageButtonColor\",\n      checkbox: false\n    },\n    {\n      title: \"Button Font Color\",\n      component: \"Colorpicker\",\n      store: \"mainImageButtonFontColor\",\n      checkbox: false\n    },\n  ],\n},\n{\n  title: \"Main Content\",\n  formItems: [\n    {\n      title: \"Content Block Text\",\n      component: \"TextField\",\n      constraints: {maxLength: 1000},\n      store: \"content\",\n      checkbox: true\n    },\n    {\n      title: \"CTA Button Text\",\n      component: \"ButtonCopyField\",\n      constraints: {maxLength: 50},\n      store: \"cta\",\n      checkbox: true\n    },\n    {\n      title: \"CTA Button Link\",\n      component: \"ButtonCopyField\",\n      store: \"ctaButtonLink\",\n      constraints: {maxLength: Infinity},\n      checkbox: false\n    },\n    {\n      title: \"Button Color\",\n      component: \"Colorpicker\",\n      store: \"ctaButtonColor\",\n      checkbox: false\n    },\n    {\n      title: \"Button Font Color\",\n      component: \"Colorpicker\",\n      store: \"ctaButtonFontColor\",\n      checkbox: false\n    },\n  ],\n},\n{\n  title: \"Footer\",\n  formItems: [\n    {\n      title: \"Company Address\",\n      component: \"TextField\",\n      constraints: {maxLength: 250},\n      store: \"footerAddress\"\n    },\n    {\n      title: \"Font Color\",\n      component: \"Colorpicker\",\n      store: \"footerFontColor\"\n    },\n    {\n      title: \"Background Color\",\n      component: \"Colorpicker\",\n      store: \"footerBGColor\"\n    },\n  ],\n}]\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { clearError } from '../../utils/actions';\nimport './ErrorPage.css';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ErrorPage extends React.Component {\n\n  componentWillUnmount() {\n    this.props.clearError();\n  }\n\n  render() {\n      return (\n      <section className=\"error-wrapper\">\n        <div className=\"error-block\">\n          <p>{this.props.error}</p>\n          <Link to=\"/\">\n            <button>Back to dashboard ></button>\n          </Link>\n        </div>\n      </section>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  error: state.error,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  clearError: () => dispatch(clearError()),\n})\n\nErrorPage.propTypes = {\n  error: PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.bool\n]),\n  clearError: PropTypes.func,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorPage);\n","import Chart from 'chart.js';\n\nexport const createChart = (\n  ref,\n  data,\n  type=\"bar\"\n) => (\n\nnew Chart(ref, {\ntype: type,\ndata: {\n    labels: data.map(tone => tone.tone_name),\n    datasets: [{\n        label: 'Sentiment Strength',\n        data: data.map(tone => (tone.score * 100).toFixed()),\n        backgroundColor: [\n            'rgba(255, 99, 132, 0.75)',\n            'rgba(54, 162, 235, 0.75)',\n            'rgba(255, 206, 86, 0.75)',\n            'rgba(75, 192, 192, 0.75)',\n            'rgba(153, 102, 255, 0.75)',\n            'rgba(255, 159, 64, 0.75)'\n        ],\n        borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)'\n        ],\n        borderWidth: 0\n  }]\n},\noptions: {\n    scales: {\n        yAxes: [{\n            ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }\n    }));\n","export const requestTones = async (content) => {\n  const parseTones = tones => {\n    const documentTones = tones.document_tone.tones;\n    return documentTones;\n  }\n\n  const data = {toneInput: {text: content}}\n\n  const res = await fetch(\"https://easy-email.mybluemix.net/api/tone\", {\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: \"POST\"\n  });\n\n  if (res.ok) {\n    const toneResponse = await res.json();\n    const tones = parseTones(toneResponse);\n    return tones;\n  } else {\n    throw new Error(`${res.status} ${res.statusText}. Oops! We couldn't reach the server.`);\n  }\n}\n","import React from 'react';\nimport './LoadingSpinner.css'\n\nconst LoadingSpinner = () => {\n  return <div className=\"loading-wrapper\"><i className=\"fas fa-spinner fa-pulse\" title=\"spinner\"></i></div>\n}\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { isLoading, hasError } from '../../utils/actions';\nimport { createChart } from '../../utils/createChart';\nimport { requestTones } from '../../utils/requestTones';\nimport './Analyzer.css';\nimport EmailImageTagline from '../EmailPreviewComponents/EmailImageTagline/EmailImageTagline';\nimport EmailContent from '../EmailPreviewComponents/EmailContent/EmailContent';\nimport EmailCTA from '../EmailPreviewComponents/EmailCTA/EmailCTA';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass Analyzer extends React.Component {\n  constructor() {\n    super();\n    this.contentRef = React.createRef();\n    this.ctaRef = React.createRef();\n    this.taglineRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.props.isLoading(true);\n\n    try {\n      const contentTones = await requestTones(this.props.content);\n      const taglineTones = await requestTones(this.props.tagline);\n      const taglineButtonTones = await requestTones(this.props.tagLineButton);\n      const taglineAndButtonTones = taglineTones.concat(taglineButtonTones);\n      const ctaTones = await requestTones(this.props.cta);\n\n      const contentRef = this.contentRef.current.getContext(\"2d\");\n      const taglineRef = this.taglineRef.current.getContext(\"2d\");\n      const ctaRef = this.ctaRef.current.getContext(\"2d\");\n\n      createChart(contentRef, contentTones, \"doughnut\");\n      createChart(taglineRef, taglineAndButtonTones);\n      createChart(ctaRef, ctaTones);\n    } catch(err) {\n      this.props.hasError(err);\n    }\n\n    this.props.isLoading(false);\n  }\n\n  render() {\n    return (\n      <div className=\"tone-analysis-view\">\n      <Link to=\"/\"><button className=\"back\">{'< Back'}</button></Link>\n      {this.props.loading && <LoadingSpinner />}\n        <h2>Content Sentiment</h2>\n        <div className=\"email-content-wrapper\">\n          <EmailContent />\n        </div>\n        <canvas\n          ref={this.contentRef}\n          style={{maxWidth: \"50rem\", maxHeight: \"30rem\"}}\n        >\n        </canvas>\n        <h2>Tagline Sentiment</h2>\n        <div className=\"email-tagline-wrapper\">\n          <EmailImageTagline />\n        </div>\n        <canvas\n          ref={this.taglineRef}\n          style={{maxWidth: \"50rem\", maxHeight: \"30rem\"}}\n        >\n        </canvas>\n        <h2>Call-to-action Sentiment</h2>\n        <div className=\"email-cta-wrapper\">\n          <EmailCTA />\n        </div>\n        <canvas\n          ref={this.ctaRef}\n          style={{maxWidth: \"50rem\", maxHeight: \"30rem\"}}\n        >\n        </canvas>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  isLoading: bool => dispatch(isLoading(bool)),\n  hasError: err => dispatch(hasError(err)),\n})\n\nconst mapStateToProps = state => ({\n  content: state.form.content,\n  tagline: state.form.mainImageTagline,\n  tagLineButton: state.form.mainImageButtonCopy,\n  cta: state.form.cta,\n  loading: state.loading,\n});\n\nAnalyzer.propTypes = {\n  content: PropTypes.string,\n  tagline: PropTypes.string,\n  taglineButton: PropTypes.string,\n  cta: PropTypes.string,\n  loading: PropTypes.bool,\n  isLoading: PropTypes.func,\n  hasError: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Analyzer);\n","import React from 'react';\nimport './App.css';\nimport { Builder } from '../FormComponents/Builder/Builder';\nimport PreviewContainer from '../EmailPreviewComponents/PreviewContainer/PreviewContainer';\nimport { DefaultTemplate } from '../../utils/Templates/DefaultTemplate';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Analyzer from '../Analyzer/Analyzer';\nimport PropTypes from 'prop-types';\n\nconst App = (props) => {\n  return (\n      <div className=\"App\">\n        {props.error && <Redirect to=\"/error\" />}\n        <Route exact path=\"/\">\n          <Builder menus={DefaultTemplate} />\n          <PreviewContainer />\n        </Route>\n        <Route path=\"/tone-analysis\">\n          <Analyzer />\n        </Route>\n        <Route path=\"/error\">\n          <ErrorPage />\n        </Route>\n      </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  error: state.error,\n})\n\nApp.propTypes = {\n  error: PropTypes.bool,\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const DefaultState = {\n  companyImage: process.env.PUBLIC_URL + '/placeholder-image.png',\n  companyName: 'Company Name',\n  mainImage: process.env.PUBLIC_URL + '/placeholder-image.png',\n  mainImageTagline: 'Your amazing call-to-action here!',\n  mainImageButtonCopy: 'Free Download',\n  content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n  cta: 'Call Now',\n  footerAddress: 'Company Address',\n  headerBGColor: \"#ffffff\",\n  footerBGColor: \"#ffffff\",\n  mainImageTaglineBG: \"#ffffff\",\n  mainImageButtonLink: \"\",\n  ctaButtonLink: \"\",\n  headerLink: \"\",\n}\n","export const DefaultVisibilityState = {\n  \"Header\": true,\n  \"Main Image\": true,\n  \"Image Banner\": true,\n  \"Main Content\": true,\n  \"Footer\": true,\n  \"Image\": true,\n  \"Company Logo\": true,\n  \"Company Name\": true,\n  \"Banner Text\": true,\n  \"Banner Button Text\": true,\n  \"CTA Button Text\": true,\n  \"Content Block Text\": true,\n}\n","import { combineReducers } from 'redux';\nimport { formReducer } from './formReducer';\nimport { visibilityReducer } from './visibilityReducer';\nimport { loadingReducer } from './loadingReducer';\nimport { errorReducer } from './errorReducer';\nimport { warningReducer } from './warningReducer';\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  visibility: visibilityReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n  warning: warningReducer,\n});\n\nexport default rootReducer;\n","import { DefaultState } from '../Templates/DefaultState';\n\nexport const formReducer = (state = DefaultState, action) => {\n  switch (action.type) {\n    case 'UPDATE':\n      return {...state, ...action.payload}\n    default:\n      return state;\n  }\n};\n","import { DefaultVisibilityState } from '../Templates/DefaultVisibilityState';\n\nexport const visibilityReducer = (state = DefaultVisibilityState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_VISIBILITY':\n      return {...state, ...action.payload};\n    default:\n      return state;\n  }\n};\n","export const loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'IS_LOADING':\n      return action.payload\n    default:\n      return state;\n  }\n};\n","export const errorReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'ERROR':\n      return action.payload.message\n    case 'CLEAR_ERROR':\n      return action.payload\n    default:\n      return state;\n  }\n};\n","export const warningReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'HAS_WARNING':\n      return action.payload\n    case 'CLEAR_WARNING':\n      return action.payload\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './utils/reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}